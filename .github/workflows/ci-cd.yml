name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  lint:
    runs-on: self-hosted
    name: Lint PHP Files
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Lint PHP files
        run: |
          for file in $(find . -name '*.php'); do
            php -l $file;
          done

  build:
    runs-on: self-hosted
    name: Build Docker Image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t clementcoiffierabeille/junia-site:latest .

  push-dockerhub:
    runs-on: self-hosted
    name: Push to DockerHub
    needs: build  # Ce job ne s'exécute qu'après le build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
      
      - name: Push Docker Image
        run: |
          docker push clementcoiffierabeille/junia-site:latest

  deploy:
    runs-on: self-hosted
    name: Deploy Application
    needs: push-dockerhub  # Ce job ne s'exécute qu'après le push sur DockerHub
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SSH to Server and Deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
          ssh $SSH_USER@$SSH_HOST "
            docker pull clementcoiffierabeille/junia-site:latest &&
            docker-compose down &&
            docker-compose up -d
          "

